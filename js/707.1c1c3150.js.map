{"version":3,"file":"js/707.1c1c3150.js","mappings":"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","sources":["webpack://vue-event/./src/views/article/artList.vue","webpack://vue-event/src/views/article/artList.vue","webpack://vue-event/./src/views/article/artList.vue?2bfa","webpack://vue-event/./src/views/article/artList.vue?640c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"文章列表\")]),_c('el-button',{staticClass:\"btn-pub\",staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.showPubDialogFn}},[_vm._v(\"发布文章 \")])],1),_c('div',{staticClass:\"search-box\"},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.pubForm}},[_c('el-form-item',{attrs:{\"label\":\"文章分类\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择分类\",\"size\":\"small\"},model:{value:(_vm.q.cate_id),callback:function ($$v) {_vm.$set(_vm.q, \"cate_id\", $$v)},expression:\"q.cate_id\"}},_vm._l((_vm.cateList),function(obj){return _c('el-option',{key:obj.id,attrs:{\"label\":obj.cate_name,\"value\":obj.id}})}),1)],1),_c('el-form-item',{staticStyle:{\"margin-left\":\"15px\"},attrs:{\"label\":\"发布状态\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择状态\",\"size\":\"small\"},model:{value:(_vm.q.state),callback:function ($$v) {_vm.$set(_vm.q, \"state\", $$v)},expression:\"q.state\"}},[_c('el-option',{attrs:{\"label\":\"已发布\",\"value\":\"已发布\"}}),_c('el-option',{attrs:{\"label\":\"草稿\",\"value\":\"草稿\"}})],1)],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.choseFn}},[_vm._v(\"筛选\")]),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\"},on:{\"click\":_vm.resetFn}},[_vm._v(\"重置\")])],1)],1)],1),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.artList,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"文章标题\",\"prop\":\"title\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-link',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.showDetailFn(scope.row.id)}}},[_vm._v(_vm._s(scope.row.title))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"分类\",\"prop\":\"cate_name\"}}),_c('el-table-column',{attrs:{\"label\":\"报表时间\",\"prop\":\"pub_date\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm.$formatDate(scope.row.pub_date)))])]}}])}),_c('el-table-column',{attrs:{\"label\":\"状态\",\"prop\":\"state\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row: row }){return [_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeFn(row.id)}}},[_vm._v(\"删除\")])]}}])})],1),_c('el-dialog',{attrs:{\"title\":\"提示\",\"visible\":_vm.pubDialogVisible,\"fullscreen\":\"\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.pubDialogVisible=$event},\"close\":_vm.dialogCloseFn}},[_c('el-form',{ref:\"pubRef\",attrs:{\"inline\":true,\"model\":_vm.pubForm,\"rules\":_vm.pubFormRules}},[_c('el-form-item',{attrs:{\"label\":\"文章标题\",\"prop\":\"title\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入标题\"},model:{value:(_vm.pubForm.title),callback:function ($$v) {_vm.$set(_vm.pubForm, \"title\", $$v)},expression:\"pubForm.title\"}})],1),_c('el-form-item',{staticStyle:{\"margin-left\":\"15px\"},attrs:{\"label\":\"文章分类\",\"prop\":\"cate_id\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择状态\",\"size\":\"small\"},model:{value:(_vm.pubForm.cate_id),callback:function ($$v) {_vm.$set(_vm.pubForm, \"cate_id\", $$v)},expression:\"pubForm.cate_id\"}},_vm._l((_vm.cateList),function(obj){return _c('el-option',{key:obj.id,attrs:{\"label\":obj.cate_name,\"value\":obj.id}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"文章内容\",\"prop\":\"content\"}},[_c('quill-editor',{on:{\"blur\":_vm.contentChangeFn},model:{value:(_vm.pubForm.content),callback:function ($$v) {_vm.$set(_vm.pubForm, \"content\", $$v)},expression:\"pubForm.content\"}})],1),_c('el-form-item',{attrs:{\"label\":\"文章封面\",\"prop\":\"cover_img\"}},[_c('img',{ref:\"imgRef\",staticClass:\"cover-img\",attrs:{\"src\":require(\"../../assets/images/avatar.jpg\"),\"alt\":\"\"}}),_c('br'),_c('input',{ref:\"iptFileRef\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.changeCoverFn}}),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.chooseImgFn}},[_vm._v(\"选择图片\")])],1),_c('el-form-item',{staticStyle:{\"display\":\"block\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.pubArticleFn('已发布')}}},[_vm._v(\"发布\")]),_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.pubArticleFn('草稿')}}},[_vm._v(\"存为草稿\")])],1)],1)],1),_c('el-pagination',{attrs:{\"current-page\":_vm.q.pagenum,\"page-sizes\":[2, 3, 5, 10],\"page-size\":_vm.q.pagesize,\"layout\":\"sizes, prev, pager, next, jumper, total\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChangeFn,\"current-change\":_vm.handleCurrentChangeFn,\"update:currentPage\":function($event){return _vm.$set(_vm.q, \"pagenum\", $event)},\"update:current-page\":function($event){return _vm.$set(_vm.q, \"pagenum\", $event)},\"update:pageSize\":function($event){return _vm.$set(_vm.q, \"pagesize\", $event)},\"update:page-size\":function($event){return _vm.$set(_vm.q, \"pagesize\", $event)}}}),_c('el-dialog',{attrs:{\"visible\":_vm.detailvisible,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.detailvisible=$event}}},[_c('h1',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.artDetail.title))]),_c('div',{staticClass:\"info\"},[_c('span',[_vm._v(\"作者:\"+_vm._s(_vm.artDetail.nickname || _vm.artDetail.username))]),_c('span',[_vm._v(\"发布时间:\"+_vm._s(_vm.$formatDate(_vm.artDetail.pub_date)))]),_c('span',[_vm._v(\"所属分类:\"+_vm._s(_vm.artDetail.cate_name))]),_c('span',[_vm._v(\"状态:\"+_vm._s(_vm.artDetail.state))])]),_c('el-divider'),(_vm.artDetail.cover_img)?_c('img',{attrs:{\"src\":_vm.baseURLR + _vm.artDetail.cover_img,\"alt\":\"\"}}):_vm._e(),_c('div',{staticClass:\"detail-box\",domProps:{\"innerHTML\":_vm._s(_vm.artDetail.content)}})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <!-- 头部区域 -->\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>文章列表</span>\r\n        <el-button style=\"float: right\" type=\"primary\" size=\"small\" class=\"btn-pub\" @click=\"showPubDialogFn\">发布文章\r\n        </el-button>\r\n      </div>\r\n      <!-- 搜索区域 -->\r\n      <div class=\"search-box\">\r\n        <el-form :inline=\"true\" :model=\"pubForm\">\r\n          <el-form-item label=\"文章分类\">\r\n            <el-select v-model=\"q.cate_id\" placeholder=\"请选择分类\" size=\"small\">\r\n              <el-option v-for=\"obj in cateList\" :key=\"obj.id\" :label=\"obj.cate_name\" :value=\"obj.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"发布状态\" style=\"margin-left: 15px\">\r\n            <el-select v-model=\"q.state\" placeholder=\"请选择状态\" size=\"small\">\r\n              <el-option label=\"已发布\" value=\"已发布\"></el-option>\r\n              <el-option label=\"草稿\" value=\"草稿\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"choseFn\">筛选</el-button>\r\n            <el-button type=\"info\" size=\"small\" @click=\"resetFn\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n      </div>\r\n      <!-- 文章的内容区域 -->\r\n      <el-table style=\"width: 100%\" :data=\"artList\" border stripe>\r\n        <el-table-column label=\"文章标题\" prop=\"title\">\r\n          <template v-slot=\"scope\">\r\n            <el-link type=\"primary\" @click=\"showDetailFn(scope.row.id)\">{{ scope.row.title }}</el-link>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"分类\" prop=\"cate_name\"></el-table-column>\r\n        <el-table-column label=\"报表时间\" prop=\"pub_date\">\r\n          <!-- scope对象: {row:行对象 } v-slot作用域插槽 用来获取插槽信息和绑定插槽里面的数据 -->\r\n          <template v-slot=\"scope\">\r\n            <span>{{ $formatDate(scope.row.pub_date) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"状态\" prop=\"state\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <!-- scope变量值:{\r\n            row:行数据对象\r\n          } -->\r\n          <template v-slot=\"{ row: row }\">\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"removeFn(row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 发表文章的Dialog对话框 -->\r\n      <el-dialog title=\"提示\" :visible.sync=\"pubDialogVisible\" fullscreen :before-close=\"handleClose\"\r\n        @close=\"dialogCloseFn\">\r\n        <!-- 发布文章的对话框 -->\r\n        <el-form :inline=\"true\" :model=\"pubForm\" :rules=\"pubFormRules\" ref=\"pubRef\">\r\n          <el-form-item label=\"文章标题\" prop=\"title\">\r\n            <el-input v-model=\"pubForm.title\" placeholder=\"请输入标题\"></el-input>\r\n          </el-form-item>\r\n          <!-- 循环渲染分类的可选项 因为整个表单要发给后台 所以要去看vue代码里绑定的值需要什么 发现接口文档里要的是分类id -->\r\n          <el-form-item label=\"文章分类\" style=\"margin-left: 15px\" prop=\"cate_id\">\r\n            <el-select v-model=\"pubForm.cate_id\" placeholder=\"请选择状态\" size=\"small\">\r\n              <el-option v-for=\"obj in cateList\" :key=\"obj.id\" :label=\"obj.cate_name\" :value=\"obj.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <!-- 文章内容  -->\r\n          <el-form-item label=\"文章内容\" prop=\"content\">\r\n            <quill-editor v-model=\"pubForm.content\" @blur=\"contentChangeFn\">\r\n            </quill-editor>\r\n          </el-form-item>\r\n          <!-- 用来显示封面的图片 -->\r\n          <el-form-item label=\"文章封面\" prop=\"cover_img\">\r\n            <img class=\"cover-img\" src=\"../../assets/images/avatar.jpg\" alt=\"\" ref=\"imgRef\" />\r\n            <br>\r\n            <!-- 选择封面按钮区域 -->\r\n            <input type=\"file\" accept=\"image/*\" style=\"display: none\" ref=\"iptFileRef\" @change=\"changeCoverFn\" />\r\n            <el-button type=\"text\" @click=\"chooseImgFn\">选择图片</el-button>\r\n          </el-form-item>\r\n          <!-- 发布区域按钮 -->\r\n          <el-form-item style=\"display:block\">\r\n            <el-button type=\"primary\" @click=\"pubArticleFn('已发布')\">发布</el-button>\r\n            <el-button type=\"info\" @click=\"pubArticleFn('草稿')\">存为草稿</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChangeFn\" @current-change=\"handleCurrentChangeFn\"\r\n        :current-page.sync=\"q.pagenum\" :page-sizes=\"[2, 3, 5, 10]\" :page-size.sync=\"q.pagesize\"\r\n        layout=\"sizes, prev, pager, next, jumper, total\" :total=\"total\">\r\n      </el-pagination>\r\n      <!-- 查看文章详情的对话框 -->\r\n      <el-dialog :visible.sync=\"detailvisible\" width=\"80%\">\r\n        <h1 class=\"title\">{{ artDetail.title }}</h1>\r\n        <div class=\"info\">\r\n          <span>作者:{{ artDetail.nickname || artDetail.username }}</span>\r\n          <span>发布时间:{{ $formatDate(artDetail.pub_date) }}</span>\r\n          <span>所属分类:{{ artDetail.cate_name }}</span>\r\n          <span>状态:{{ artDetail.state }}</span>\r\n        </div>\r\n        <!-- 分割线 -->\r\n        <el-divider></el-divider>\r\n        <!-- 文章的封面 -->\r\n        <!-- 详情请看main.js最下方注释 -->\r\n        <img v-if=\"artDetail.cover_img\" :src=\"baseURLR + artDetail.cover_img\" alt=\"\">\r\n        <!-- 文章的详情 -->\r\n        <div class=\"detail-box\" v-html=\"artDetail.content\"></div>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArtCateListAPI, uploadArticleAPI, getArtListAPI, getArtDetailAPI, delArticleAPI } from '@/api'\r\n// 标签和央视中，把图片文件可以写成路径，在js里引入图片要用import引入\r\n// webpack会把图片变成为一个base64字符串/在打包后的图片临时地址\r\nimport imgObj from '@/assets/images/cover.jpg'\r\nimport { baseURL } from '@/utils/request.js'\r\nexport default {\r\n  name: 'ArtList',\r\n  data() {\r\n    return {\r\n      baseURLR: baseURL,\r\n      q: { // 查询参数对象\r\n        pagenum: 1, // 默认拿第一页的数据\r\n        pagesize: 2, // 默认当前页需要几条数据(传递给后台,后台就返回几个数据)\r\n        cate_id: '', // 文章id\r\n        state: '' // 文章状态\r\n      },\r\n      // 查询参数对象\r\n      pubForm: { // 发布文章 表单的数据对象\r\n        cate_id: '', // 文章分类id\r\n        state: '', // 文章状态\r\n        title: '', // 文章标题\r\n        content: '', // 文章内容\r\n        cover_img: '' // 文章图片\r\n      },\r\n      // 弹窗是否打开\r\n      pubDialogVisible: false,\r\n      // 规则校验\r\n      pubFormRules: {\r\n        title: [\r\n          { required: true, message: '请输入文章标题', trigger: 'blur' },\r\n          { min: 1, max: 30, message: '文章标题的长度为1-30个字符', trigger: 'blur' }\r\n        ],\r\n        cate_id: [\r\n          { required: true, message: '请选择文章id', trigger: 'change' }\r\n        ],\r\n        content: [\r\n          // 为何在这个输入内容了 校验还不自己去掉\r\n          // 原因:\r\n          // content对应quill-editor富文本编辑器 他不是el提供的表单标签\r\n          // el-input等输入框的在blur事件时进行校验\r\n          // 下来菜单 单选框 复选框 是在change事件时进行校验\r\n          // quill-editor2个事件都没有 所以你输入内容也不会自动走校验\r\n          // 解决:\r\n          // 自己给quill-editor绑定change事件(在文档里查到它支持change事件内容改变事件)\r\n          // 在事件处理函数中用 el-form组件对象内 调用某个校验规则再重新执行\r\n          { required: true, message: '请选择文章内容', trigger: 'blur' }\r\n        ],\r\n        state: [\r\n          { required: true, message: '请选择文章状态', trigger: 'blur' }\r\n\r\n        ],\r\n        cover_img: [\r\n          { required: true, message: '请选择文章封面', trigger: 'blur' }\r\n        ]\r\n      },\r\n      cateList: [],\r\n      artList: [], // 保存文章列表\r\n      total: 0, // 保存现有文章的总数\r\n      detailvisible: false, // 打开文章详情 显示/隐藏\r\n      artDetail: {} // 文章详情\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化文章分类的列表数据\r\n    async initCateList() {\r\n      const { data: res } = await getArtCateListAPI()\r\n      if (res.code !== 0) return\r\n      this.cateList = res.data\r\n      // console.log(this.cateList)\r\n    },\r\n    // 初始化文章列表数据\r\n    async getArtListFN() {\r\n      const { data: res } = await getArtListAPI(this.q)\r\n      this.artList = res.data\r\n      this.total = res.total\r\n      // console.log(res)\r\n    },\r\n    // 发表文章按钮点击事件 ->让对话框出现\r\n    showPubDialogFn() {\r\n      this.pubDialogVisible = true\r\n    },\r\n    // 发布文章-对话框-关闭前的回调\r\n    // 注意:自带的3种关闭方式:dialog自带的点右上角的x和按下esc按键 和点击半透明蒙层关闭才会走这里以及你自己点击设置visible对应变量为false 都会导致关闭前回调触发\r\n    async handleClose(done) { // done的作用: 调用才会放行让对话框关闭\r\n      // 询问用户是否确认关闭对话框\r\n      const confirmResult = await this.$confirm('此操作将导致文章信息丢失,是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err) // 捕获确认框Promise对象里选择取消时  拒绝状态结果为cancel字符串\r\n      // $confirm内部虽然是一个确认提示框，但是它借用了Promise语法来管理 点击确定它的状态为兑现成功状态返回'confirm'，如果用户点击了取消按钮 此Promise对象状态为拒绝状态，参会cancel字符串\r\n      if (confirmResult === 'cancel') return\r\n      // 确认关闭\r\n      done()\r\n    },\r\n    // 上传文件选择\r\n    chooseImgFn() {\r\n      this.$refs.iptFileRef.click()\r\n    },\r\n    // 封面选择改变的事件\r\n    changeCoverFn(e) {\r\n      // 获取用户选择的文件列表\r\n      // e.target拿到触发事件的那个标签(input标签对象本身)\r\n      // e.target.files拿到选择的文件数组\r\n      const files = e.target.files\r\n      if (files.length === 0) {\r\n        // 用户没有选择封面\r\n        this.pubForm.cover_img = null\r\n        // img要显示回默认的cover.png\r\n        this.$refs.imgRef.setAttribute('src', imgObj)\r\n      } else {\r\n        // 用户选择了封面\r\n        this.pubForm.cover_img = files[0]\r\n        // 预览效果\r\n        const url = URL.createObjectURL(files[0])\r\n        this.$refs.imgRef.setAttribute('src', url)\r\n      }\r\n      this.$refs.pubRef.validateField('cover_img')\r\n    },\r\n    // 校验发布文章表单有存为草稿和发布两个按钮\r\n    pubArticleFn(str) {\r\n      this.pubForm.state = str\r\n      this.$refs.pubRef.validate(async valid => {\r\n        if (valid) {\r\n          // 通过校验\r\n          // console.log(this.pubForm.state)\r\n          const fd = new FormData() // 准备一个表单数据对象的容器 FormData类是HTML5新出的专门为了装文件内容和其他参数的一个容器\r\n          // fd.append('参数名',值)\r\n          fd.append('title', this.pubForm.title)\r\n          fd.append('cate_id', this.pubForm.cate_id)\r\n          fd.append('content', this.pubForm.content)\r\n          fd.append('cover_img', this.pubForm.cover_img)\r\n          fd.append('state', this.pubForm.state)\r\n          const { data: res } = await uploadArticleAPI(fd)\r\n          if (res.code !== 0) return this.$message.error(res.message)\r\n          this.$message.success(res.message)\r\n          // console.log(res)\r\n          // 让发布页面重置\r\n          this.$refs.pubRef.resetFields()\r\n          // 让封面重置\r\n          this.$refs.imgRef.setAttribute('src', imgObj)\r\n          this.getArtListFN()\r\n          // 关闭弹窗\r\n          this.pubDialogVisible = false\r\n        } else {\r\n          // 没有通过\r\n          return false // 阻止默认行为(因为按钮有默认提交行为)\r\n        }\r\n      })\r\n    },\r\n    // 富文本编辑器校验\r\n    contentChangeFn() {\r\n      // 目的让 el-form校验 只校验content这个规则\r\n      this.$refs.pubRef.validateField('content')\r\n    },\r\n    // 新增文章->对话框关闭时->清空表单\r\n    dialogCloseFn() {\r\n      this.$refs.iptFileRef.resetFields()\r\n    },\r\n    // 核心思想:根据选择的页码/条数,影响q对象对应属性的值,再重新发一次请求让后台重新返回数据\r\n    // 每页显示的条数发生改变\r\n    handleSizeChangeFn(sizes) {\r\n      // sizes:当前需要每页显示的条数\r\n      // 因为Pagination的标签上已经加了.sync,子组件内会双向绑定到右侧vue变量上(q对象中pagesize已经改变)\r\n      // 如果不放心可以再写一遍\r\n      this.q.pagesize = sizes\r\n\r\n      // 问题:先点击最后一个页码,切换每页显示条数2->3 总数不够 分页只能到2\r\n      // 每页条数改变了 页码从3到2改变了 两个事件都会触发\r\n      // 偶发性的bug:有时候自动回到第二页有数据 有的时候没有\r\n      // 知识点: 两个网络请求一起发 谁先回来不一定\r\n      // 原因:可能第2页3条数据回来有值铺设 紧接着第3页的3条数据回来了,空数组所以页面就是空的\r\n      // 解决： 当切换每页显示的条数 我们就把当前页码设置为1 而且标签里要设置\r\n      this.q.pagenum = 1\r\n      this.getArtListFN()\r\n    },\r\n    // 页数发生改变\r\n    handleCurrentChangeFn(nowPage) {\r\n      // nowPage:当前要看的第几页,页数\r\n      this.q.pagenum = nowPage\r\n      this.getArtListFN()\r\n    },\r\n    // 筛选按钮->点击事件\r\n    choseFn() {\r\n      // 目的:当有了筛选的条件 我想让页码回到1,每页条数到2\r\n      this.q.pagenum = 1\r\n      this.q.pagesize = 2\r\n      this.getArtListFN()\r\n    },\r\n    // 重置按钮 ->点击事件\r\n    resetFn() {\r\n      this.q.pagenum = 1\r\n      this.q.pagesize = 2\r\n      this.q.cate_id = ''\r\n      this.q.state = '' // 对象改变  v-model关联的表单标签也会变为空\r\n      this.getArtListFN()\r\n    },\r\n    // 文章的点击事件\r\n    async showDetailFn(id) {\r\n      this.detailvisible = true\r\n      const { data: res } = await getArtDetailAPI(id)\r\n      this.artDetail = res.data\r\n      // console.log(this.artDetail)\r\n    },\r\n    // 删除文章点击事件\r\n    async removeFn(id) {\r\n      const { data: res } = await delArticleAPI(id)\r\n      if (res.code !== 0) return this.$message.error(res.message)\r\n      this.$message.success(res.message)\r\n      // 数组里只保存当前页的数据,别的页的需要传参q给后台获取覆盖\r\n      // 1的原因:虽然你调用删除接口但是那是后端删除,前端数组里你没有代码去修改它\r\n      if (this.artList.length === 1) {\r\n        if (this.q.pagenum > 1) { // 不能让页面变成-1\r\n          this.q.pagenum--\r\n        }\r\n      }\r\n      // 问题:在最后一夜,删除最后一条时,虽然页码能回到上一页,但是数据没有出现\r\n      // 原因:发现network里参数q.pagenum的值不会自己回到上一页 因为你的代码里没有修改过这个q.pagenum值 用geiArtcleFn方法 带着之前的参数请求去了所以没有数据\r\n      // 解决: 在调用接口以后,刷新数组列表之前,对页码做一些处理\r\n      // 直接携带当前q里有的参数，重新去后台获取一次\r\n      this.getArtListFN()\r\n      // 或者把分页和筛选条件重置，让表格的数据重新请求一次\r\n      // this.resetFn()\r\n    }\r\n\r\n  },\r\n  created() {\r\n    // 获取数据\r\n    this.initCateList()\r\n    this.getArtListFN()\r\n  }\r\n}\r\n\r\n// $confirm内部虽然是一个确认提示框  但是它借用了Promise语法来管理，点击确定它的状态为兑现成功状态返回'confirm'，如果用户点击了取消按钮，此Promise对象状态为拒绝状态，返回'cancel'字符串\r\n\r\n// 知识点回顾:\r\n// 1.await只能用在async修饰的函数内\r\n// async修饰:就是在当前函数名左边加async关键字 如果没有函数名 在形参的左边加async\r\n// 原因 async修饰的函数就是异步函数 如果此函数被调用 总是返回一个全新 Promise对象\r\n// 而且本次函数调用因为时异步函数 ,所以外边的同步代码继续执行,而await暂停代码只能暂停async函数内的,等待await后面异步结果\r\n// 2.await只能拿到成功的结果并放行往下走,如果失败内部就会向浏览器控制台抛出错误并不会让await往下走代码\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.search-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n\r\n  .btn-pub {\r\n    margin-top: 5px;\r\n  }\r\n}\r\n\r\n// 设置富文本编辑器的默认最小高度\r\n// ::v-deep作用: 穿透选择, 正常style上加了scope的话, 会给.ql-editor[data-v-hash]属性, 只能选择当前页面标签或者组件的根标签\r\n// 如果想要选择组件内的标签(那些标签没有data-v-hash值)所以正常选择选不中, 加了::v-deep空格前置的话, 选择器就会变成如下形式\r\n// [data-v-hash] .ql-editor 这样就能选中组件内的标签的class类名了\r\n::v-deep .ql-editor {\r\n  min-height: 300px;\r\n}\r\n\r\n// 设置图片封面的宽高\r\n.cover-img {\r\n  width: 400px;\r\n  height: 280px;\r\n  object-fit: cover;\r\n}\r\n\r\n.el-pagination {\r\n  margin-top: 15px;\r\n}\r\n\r\n.title {\r\n  font-size: 24px;\r\n  text-align: center;\r\n  font-weight: normal;\r\n  color: #000;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.info {\r\n  font-size: 12px;\r\n\r\n  span {\r\n    margin-right: 20px;\r\n  }\r\n}\r\n\r\n// 修改 dialog 内部元素的样式，需要添加样式穿透\r\n::v-deep .detail-box {\r\n  img {\r\n    width: 500px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./artList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./artList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./artList.vue?vue&type=template&id=09602741&scoped=true&\"\nimport script from \"./artList.vue?vue&type=script&lang=js&\"\nexport * from \"./artList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./artList.vue?vue&type=style&index=0&id=09602741&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09602741\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","staticStyle","on","showPubDialogFn","pubForm","model","value","q","cate_id","callback","$$v","$set","expression","_l","cateList","obj","key","id","cate_name","state","choseFn","resetFn","artList","scopedSlots","_u","fn","scope","$event","showDetailFn","row","_s","title","$formatDate","pub_date","removeFn","pubDialogVisible","handleClose","dialogCloseFn","ref","pubFormRules","contentChangeFn","content","require","changeCoverFn","chooseImgFn","pubArticleFn","pagenum","pagesize","total","handleSizeChangeFn","handleCurrentChangeFn","detailvisible","artDetail","nickname","username","cover_img","baseURLR","_e","domProps","staticRenderFns","name","data","required","message","trigger","min","max","methods","confirmButtonText","cancelButtonText","type","done","fd","created","component"],"sourceRoot":""}